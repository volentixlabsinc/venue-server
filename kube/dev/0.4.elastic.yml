
---
# Source: elasticsearch/templates/es-curator-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: manageable-toucan-elasticsearch-curator-config
  namespace: venue-dev
  labels:
    app: manageable-toucan-elasticsearch
    chart: "elasticsearch-0.2.2"
    release: "manageable-toucan"
    heritage: "Tiller"
data:
  action_file.yml: |-
    ---
    # Remember, leave a key empty if there is no value.  None will be a string,
    # not a Python "NoneType"
    #
    # Also remember that all examples have 'disable_action' set to True.  If you
    # want to use this action as a template, be sure to set this to False after
    # copying it.
    actions:
      1:
        action: delete_indices
        description: "Clean up ES by deleting old indices"
        options:
          timeout_override:
          continue_if_exception: False
          disable_action: False
        filters:
        - filtertype: age
          source: name
          direction: older
          timestring: '%Y.%m.%d'
          unit: days
          unit_count: 3
          field:
          stats_result:
          epoch:
          exclude: False
  config.yml: |-
    ---
    # Remember, leave a key empty if there is no value.  None will be a string,
    # not a Python "NoneType"
    client:
      hosts:
        - manageable-toucan-elasticsearch
      port: 9200
      url_prefix:
      use_ssl: False
      certificate:
      client_cert:
      client_key:
      ssl_no_validate: False
      http_auth:
      timeout: 30
      master_only: False
    logging:
      loglevel: INFO
      logfile:
      logformat: default
      blacklist: ['elasticsearch', 'urllib3']
---
# Source: elasticsearch/templates/es-discovery-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: manageable-toucan-elasticsearch-discovery
  namespace: venue-dev
  labels:
    app: manageable-toucan-elasticsearch
    chart: "elasticsearch-0.2.2"
    release: "manageable-toucan"
    heritage: "Tiller"
    component: manageable-toucan-elasticsearch
    role: master
spec:
  selector:
    component: manageable-toucan-elasticsearch
    role: master
  ports:
  - name: transport
    port: 9300
    protocol: TCP
---
# Source: elasticsearch/templates/es-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: manageable-toucan-elasticsearch
  namespace: venue-dev
  labels:
    app: manageable-toucan-elasticsearch
    chart: "elasticsearch-0.2.2"
    release: "manageable-toucan"
    heritage: "Tiller"
    component: manageable-toucan-elasticsearch
    role: client
spec:
  type: ClusterIP
  selector:
    component: manageable-toucan-elasticsearch
    role: client
  ports:
  - name: http
    port: 9200
    targetPort: 9200
    protocol: TCP
  - name: transport
    port: 9300
    targetPort: 9300
    protocol: TCP
---
# Source: elasticsearch/templates/kibana-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: manageable-toucan-elasticsearch-kibana
  namespace: venue-dev
  labels:
    app: manageable-toucan-elasticsearch
    chart: "elasticsearch-0.2.2"
    release: "manageable-toucan"
    heritage: "Tiller"
    component: manageable-toucan-elasticsearch-kibana
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 5601
    protocol: TCP
  selector:
    component: manageable-toucan-elasticsearch-kibana
---
# Source: elasticsearch/templates/es-client.yaml
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: manageable-toucan-elasticsearch-client
  namespace: venue-dev
  labels:
    app: manageable-toucan-elasticsearch
    chart: "elasticsearch-0.2.2"
    release: "manageable-toucan"
    heritage: "Tiller"
    component: manageable-toucan-elasticsearch
    role: client
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: manageable-toucan-elasticsearch
        role: client
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: manageable-toucan-elasticsearch
                  role: client
      initContainers:
      - name: init-sysctl
        image: "busybox:latest"
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: es-client
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: "quay.io/pires/docker-elasticsearch-kubernetes:6.2.3"
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: manageable-toucan-elasticsearch-discovery
        - name: CLUSTER_NAME
          value: "vlabs.ninja"
        - name: NETWORK_HOST
          value: "_eth0_"
        - name: HTTP_ENABLE
          value: "true"
        - name: NODE_DATA
          value: "false"
        - name: NODE_INGEST
          value: "true"
        - name: NODE_MASTER
          value: "false"
        - name: "ES_JAVA_OPTS"
          value: "-Xms256m -Xmx256m"
        resources:
          requests:
            memory: 256Mi
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 9300
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
          initialDelaySeconds: 20
          timeoutSeconds: 5
        volumeMounts:
        - name: storage
          mountPath: /data
      volumes:
          - emptyDir:
              medium: ""
            name: "storage"
---
# Source: elasticsearch/templates/es-data.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: manageable-toucan-elasticsearch-data
  namespace: venue-dev
  labels:
    app: manageable-toucan-elasticsearch
    chart: "elasticsearch-0.2.2"
    release: "manageable-toucan"
    heritage: "Tiller"
    component: manageable-toucan-elasticsearch
    role: data
spec:
  replicas: 2
  template:
    metadata:
      labels:
        component: manageable-toucan-elasticsearch
        role: data
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: manageable-toucan-elasticsearch
                  role: data
      initContainers:
      - name: init-sysctl
        image: "busybox:latest"
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: es-data
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: "quay.io/pires/docker-elasticsearch-kubernetes:6.2.3"
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: manageable-toucan-elasticsearch-discovery
        - name: ES_JAVA_OPTS
          value: "-Xms256m -Xmx256m"
        - name: CLUSTER_NAME
          value: "vlabs.ninja"
        - name: NETWORK_HOST
          value: "_eth0_"
        - name: HTTP_ENABLE
          value: "false"
        - name: NODE_DATA
          value: "true"
        - name: NODE_INGEST
          value: "false"
        - name: NODE_MASTER
          value: "false"
        resources:
          requests:
            memory: 256Mi
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 9300
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeMounts:
        - name: storage
          mountPath: /data
      volumes:
        - emptyDir:
            medium: ""
          name: "storage"
---
# Source: elasticsearch/templates/es-master.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: manageable-toucan-elasticsearch-master
  namespace: venue-dev
  labels:
    app: manageable-toucan-elasticsearch
    chart: "elasticsearch-0.2.2"
    release: "manageable-toucan"
    heritage: "Tiller"
    component: manageable-toucan-elasticsearch
    role: master
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: manageable-toucan-elasticsearch
        role: master
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  component: manageable-toucan-elasticsearch
                  role: master
      initContainers:
      - name: init-sysctl
        image: "busybox:latest"
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: es-master
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: "quay.io/pires/docker-elasticsearch-kubernetes:6.2.3"
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: manageable-toucan-elasticsearch-discovery
        - name: ES_JAVA_OPTS
          value: "-Xms256m -Xmx256m"
        - name: CLUSTER_NAME
          value: "vlabs.ninja"
        - name: NETWORK_HOST
          value: "_eth0_"
        - name: HTTP_ENABLE
          value: "false"
        - name: NODE_DATA
          value: "false"
        - name: NODE_INGEST
          value: "false"
        - name: NODE_MASTER
          value: "true"
        - name: NUMBER_OF_MASTERS
          value: "1"
        resources:
          requests:
            memory: 256Mi
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 9300
        volumeMounts:
        - name: storage
          mountPath: /data
      volumes:
        - emptyDir:
            medium: ""
          name: "storage"
---
# Source: elasticsearch/templates/kibana.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: manageable-toucan-elasticsearch-kibana
  namespace: venue-dev
  labels:
    app: manageable-toucan-elasticsearch
    chart: "elasticsearch-0.2.2"
    release: "manageable-toucan"
    heritage: "Tiller"
    component: manageable-toucan-elasticsearch-kibana
spec:
  replicas: 1
  selector:
    matchLabels:
     component: manageable-toucan-elasticsearch-kibana
  template:
    metadata:
      labels:
        component: manageable-toucan-elasticsearch-kibana
    spec:
      containers:
      - name: kibana
        image: "docker.elastic.co/kibana/kibana-oss:6.2.3"
        imagePullPolicy: Always
        env:
        - name: CLUSTER_NAME
          value: vlabs.ninja
        - name: ELASTICSEARCH_URL
          value: http://manageable-toucan-elasticsearch:9200
        resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 100m
        ports:
        - containerPort: 5601
          name: kibana
          protocol: TCP
---
# Source: elasticsearch/templates/es-curator.yaml
apiVersion: "batch/v1beta1"
kind: CronJob
metadata:
  name: manageable-toucan-elasticsearch-curator
  namespace: venue-dev
  labels:
    app: manageable-toucan-elasticsearch
    chart: "elasticsearch-0.2.2"
    release: "manageable-toucan"
    heritage: "Tiller"
spec:
  schedule: 0 1 * * *
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: curator
            image: "bobrik/curator:latest"
            imagePullPolicy: IfNotPresent
            args: ["--config", "/etc/config/config.yml", "/etc/config/action_file.yml"]
            volumeMounts:
              - name: config-volume
                mountPath: /etc/config
          volumes:
            - name: config-volume
              configMap:
                name: manageable-toucan-elasticsearch-curator-config
          restartPolicy: OnFailure
---
# Source: elasticsearch/templates/kibana-ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: manageable-toucan-elasticsearch-kibana
  namespace: venue-dev
  labels:
    app: elasticsearch
    chart: elasticsearch-0.2.2
    release: manageable-toucan
    heritage: Tiller
    component: manageable-toucan-elasticsearch-kibana
  annotations:
      kubernetes.io/ingress.class: "traefik"
spec:
  rules:
    - host: kibana.dev.vlabs.ninja
      http:
        paths:
          - backend:
              serviceName: manageable-toucan-elasticsearch-kibana
              servicePort: 80
